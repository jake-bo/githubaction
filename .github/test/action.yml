name: Parse Json To Tfvars
description: Input Json String, then parse it to tfvars
inputs:
  json_param:
    description: json param
    required: true
    default: '{}'
  tfvars_file_path:
    description: The absolute path of the .tfvars file
    required: true
    default: ${{ github.workspace }}/temp_inputs.hcl
runs:
  using: "composite"
  steps:
    - name: Parse Json Input To Tfvars
      run: |
          echo '${{inputs.json_param}}' | jq -r 'to_entries | map(
          if .value | type == "object" then
          "  \(.key) = {\n" +
          (.value | to_entries | map("    \"\(.key)\" = \"\(.value)\"") | join("\n")) +
          "\n}"
          elif .value | type == "array" then
          if .value[0] | type == "object" then
          "  \(.key) = [\n" +
          (.value | map(
          "    { " +
          (. | to_entries | map("\"\(.key)\" = \"\(.value)\"") | join(", ")) +
          " }"
          ) | join(",\n")) +
          "\n  ]"
          else
          "  \(.key) = \(.value | @json)"
          end
          else
          "  \(.key) = \(if .value | type == "string" then "\"\(.value)\"" else .value | @json end)"
          end
          ) | join(",\n")'  > ${{inputs.tfvars_file_path}}
          awk '
          /__TERRAGRUNT_DYNAMIC_INPUTS__/ {
          while ((getline line < "${{inputs.tfvars_file_path}}") > 0) {
          print line
          }
          next
          }
          { print }
          ' terragrunt.hcl > terragrunt.hcl.tmp && mv terragrunt.hcl.tmp terragrunt.hcl

