name: Deploy and Destroy Alibaba Cloud VPC with Terraform

on:
  push:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      vpc_name:
        description: 'VPC名称'
        required: true
        default: 'github-actions-vpc'
        type: string
      vpc_cidr:
        description: 'VPC CIDR网段'
        required: false
        default: '172.16.0.0/16'
        type: string
      vpc_description:
        description: 'VPC描述'
        required: false
        default: 'Created via GitHub Actions'
        type: string
      action_type:
        description: '操作类型'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - destroy

env:
  TF_VAR_region: ${{ secrets.ALICLOUD_REGION }}

jobs:
  deploy:
    name: 'Terraform Plan and Apply'
    runs-on: ubuntu-latest
    if: github.event.inputs.action_type == 'deploy'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.11.4'

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ./.github/terraform

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}
          ALICLOUD_REGION: ${{ secrets.ALICLOUD_REGION }}
        working-directory: ./.github/terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./.github/terraform

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -no-color \
          -var="vpc_name=${{ github.event.inputs.vpc_name }}" \
          -var="vpc_cidr=${{ github.event.inputs.vpc_cidr }}" \
          -var="vpc_description=${{ github.event.inputs.vpc_description }}"
        env:
          ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}
          ALICLOUD_REGION: ${{ secrets.ALICLOUD_REGION }}
        working-directory: ./.github/terraform

      - name: Terraform Apply
        if: github.event_name == 'workflow_dispatch'
        run: |
          terraform apply -auto-approve -input=false \
          -var="vpc_name=${{ github.event.inputs.vpc_name }}" \
          -var="vpc_cidr=${{ github.event.inputs.vpc_cidr }}" \
          -var="vpc_description=${{ github.event.inputs.vpc_description }}"
        env:
          ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}
          ALICLOUD_REGION: ${{ secrets.ALICLOUD_REGION }}
        working-directory: ./.github/terraform

  destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    if: github.event.inputs.action_type == 'destroy'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.11.4'

      - name: Terraform Init
        id: init-destroy
        run: terraform init
        env:
          ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}
          ALICLOUD_REGION: ${{ secrets.ALICLOUD_REGION }}
        working-directory: ./.github/terraform

      - name: Confirm Destroy
        run: echo "正在销毁VPC: ${{ github.event.inputs.vpc_name }}，此操作无法撤销！"

      - name: Terraform Destroy
        id: destroy
        run: |
          terraform destroy -auto-approve -input=false \
          -var="vpc_name=${{ github.event.inputs.vpc_name }}" \
          -var="vpc_cidr=${{ github.event.inputs.vpc_cidr }}" \
          -var="vpc_description=${{ github.event.inputs.vpc_description }}"
        env:
          ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}
          ALICLOUD_REGION: ${{ secrets.ALICLOUD_REGION }}
        working-directory: ./.github/terraform
