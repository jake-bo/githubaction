name: Deploy and Destroy Alibaba Cloud VPC with Terraform

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      vpc_name:
        description: 'VPC名称'
        required: true
        default: 'github-actions-vpc'
        type: string
      vpc_cidr:
        description: 'VPC CIDR网段'
        required: false
        default: '172.16.0.0/16'
        type: string
      vpc_description:
        description: 'VPC描述'
        required: false
        default: 'Created via GitHub Actions'
        type: string

env:
  TF_VAR_region: ${{ secrets.ALICLOUD_REGION }}

jobs:
  terraform:
    name: 'Terraform Plan and Apply'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.11.4'

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init
      env:
        ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
        ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}
        ALICLOUD_REGION: ${{ secrets.ALICLOUD_REGION }}
      working-directory: ./.github/terraform

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -input=false -no-color \
        -var="vpc_name=${{ github.event.inputs.vpc_name }}" \
        -var="vpc_cidr=${{ github.event.inputs.vpc_cidr }}" \
        -var="vpc_description=${{ github.event.inputs.vpc_description }}"
      working-directory: ./.github/terraform
      env:
        ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
        ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}
        ALICLOUD_REGION: ${{ secrets.ALICLOUD_REGION }}

    - name: Terraform Apply
      if: github.event_name == 'workflow_dispatch'
      run: |
        terraform apply -auto-approve -input=false \
        -var="vpc_name=${{ github.event.inputs.vpc_name }}" \
        -var="vpc_cidr=${{ github.event.inputs.vpc_cidr }}" \
        -var="vpc_description=${{ github.event.inputs.vpc_description }}"
      working-directory: ./.github/terraform
      env:
        ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
        ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}
        ALICLOUD_REGION: ${{ secrets.ALICLOUD_REGION }}

  destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    # 默认设置为手动触发，并添加确认步骤
    if: github.event_name == 'workflow_dispatch' && contains(github.event.inputs.vpc_name, 'destroy')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@vv3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.11.4'

    - name: Terraform Init
      id: init-destroy
      run: terraform init
      env:
        ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
        ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}
        ALICLOUD_REGION: ${{ secrets.ALICLOUD_REGION }}
      working-directory: ./.github/terraform

    - name: Confirm Destroy
      run: echo "正在销毁VPC: ${{ github.event.inputs.vpc_name }}，此操作无法撤销！"

    - name: Terraform Destroy
      id: destroy
      run: terraform destroy -auto-approve -input=false \
        -var="vpc_name=${{ github.event.inputs.vpc_name }}" \
        -var="vpc_cidr=${{ github.event.inputs.vpc_cidr }}" \
        -var="vpc_description=${{ github.event.inputs.vpc_description }}"
      working-directory: ./.github/terraform
      env:
        ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
        ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}
        ALICLOUD_REGION: ${{ secrets.ALICLOUD_REGION }}
