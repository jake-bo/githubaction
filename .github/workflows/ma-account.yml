name: Deploy Alibaba Cloud VPC with Terraform

on:
  push:
    branches: [ main, master ]

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.13.3'

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init
      env:
        TF_VAR_ALICLOUD_ACCESS_KEY: ${{ secrets.MASTER_ALICLOUD_ACCESS_KEY }}
        TF_VAR_ALICLOUD_SECRET_KEY: ${{ secrets.MASTER_ALICLOUD_SECRET_KEY }}
        TF_VAR_ALICLOUD_ROLE_ARN: ${{ secrets.LOGGING_ALICLOUD_ROLE_ARN }}
      working-directory: ./.github/terraform-vpc

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -input=false -no-color 
      working-directory: ./.github/terraform-vpc
      env:
        TF_VAR_ALICLOUD_ACCESS_KEY: ${{ secrets.MASTER_ALICLOUD_ACCESS_KEY }}
        TF_VAR_ALICLOUD_SECRET_KEY: ${{ secrets.MASTER_ALICLOUD_SECRET_KEY }}
        TF_VAR_ALICLOUD_ROLE_ARN: ${{ secrets.LOGGING_ALICLOUD_ROLE_ARN }}

    - name: Terraform Apply
      # if: github.event_name == 'workflow_dispatch'
      id: apply
      run: |
        terraform apply -auto-approve -input=false 
      working-directory: ./.github/terraform-vpc
      env:
        TF_VAR_ALICLOUD_ACCESS_KEY: ${{ secrets.MASTER_ALICLOUD_ACCESS_KEY }}
        TF_VAR_ALICLOUD_SECRET_KEY: ${{ secrets.MASTER_ALICLOUD_SECRET_KEY }}
        TF_VAR_ALICLOUD_ROLE_ARN: ${{ secrets.LOGGING_ALICLOUD_ROLE_ARN }}
